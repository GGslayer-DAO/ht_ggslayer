// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model


const TableNameGameDetail = "game_details"

// GameDetail mapped from table <game_details>
type GameDetail struct {
	ID           int32  `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"` // 主键ID
	GameID       int32  `gorm:"column:game_id;not null" json:"game_id"`            // 游戏id
	Detail       string `gorm:"column:detail;null" json:"detail"`              // 详情内容
	Describe       string `gorm:"column:describe;null" json:"describe"`             // 详情内容
	GameTerm     string `gorm:"column:game_term" json:"game_term"`                 // 游戏团队，用json数据展示
	GameInvestor string `gorm:"column:game_investor" json:"game_investor"`         // 游戏投资人，用json数据展示
	Video        string `gorm:"column:video" json:"video"`                         // 游戏视频
	SocialLink   string `gorm:"column:social_link" json:"social_link"`             // 社交链接
	Website      string `gorm:"column:website" json:"website"`                     // 游戏网站
	Screenshot   string `gorm:"column:screenshot" json:"screenshot"`               // 游戏图片
	Platform     string `gorm:"column:platform" json:"platform"`                   // 游戏平台
}

// TableName GameDetail's table name
func (*GameDetail) TableName() string {
	return TableNameGameDetail
}

func NewGameDetail() *GameDetail {
	return &GameDetail{}
}

//更新或新增
func (m *GameDetail) FirstOrCreate(gameId int32, details, describe, gameTerm, gameInvestor, video, socialLink,
	website, screenshot, platform string) (err error) {
	gameDetail := new(GameDetail)
	db.Model(m).Where("game_id = ?", gameId).Find(&gameDetail)
	gameDetail.GameID = gameId
	gameDetail.Detail = details
	gameDetail.Describe = describe
	gameDetail.GameTerm = gameTerm
	gameDetail.GameInvestor = gameInvestor
	gameDetail.Video = video
	gameDetail.SocialLink = socialLink
	gameDetail.Website = website
	gameDetail.Screenshot = screenshot
	gameDetail.Platform = platform
	db.Save(gameDetail)
	return
}

//FindDetailByGameId 根据游戏获取详情数据信息
func (m *GameDetail) FindDetailByGameId(gameId int32) (details *GameDetail, err error) {
	err = db.Model(m).Where("game_id = ?", gameId).Find(&details).Error
	return
}

func (m *GameDetail) Save() error {
	return db.Save(m).Error
}

//UpdateInfoByGameId 根据游戏id更新详情数据信息
func (m *GameDetail) UpdateInfoByGameId(gameId int, datas interface{}) (err error) {
	err = db.Model(m).Where("game_id = ?", gameId).Updates(datas).Error
	return
}
