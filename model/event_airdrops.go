// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameEventAirdrop = "event_airdrops"

// EventAirdrop mapped from table <event_airdrops>
type EventAirdrop struct {
	ID            int32  `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"` // 主键ID
	EventID       int32  `gorm:"column:event_id;not null" json:"event_id"`          // 活动id
	AirdropReward string `gorm:"column:airdrop_reward" json:"airdrop_reward"`       // 空投奖励
	Quota         int  `gorm:"column:quota;not null" json:"quota"`                // 名额数量
}

// TableName EventAirdrop's table name
func (*EventAirdrop) TableName() string {
	return TableNameEventAirdrop
}

func NewEventAirdrop() *EventAirdrop {
	return &EventAirdrop{}
}

//FindInfoByEventId 根据活动id查找相关数据信息
func (m *EventAirdrop) FindInfoByEventId(eventId int32) (airdrop *EventAirdrop, err error) {
	err = db.Model(m).Where("event_id = ?", eventId).Find(&airdrop).Error
	return
}

//FindInfoByEventIds 根据活动id查找
func (m *EventAirdrop) FindInfoByEventIds(eventIds []int32) (res map[int32]*EventAirdrop, err error) {
	airdrops := make([]*EventAirdrop, 0, len(eventIds))
	err = db.Model(m).Where("event_id in (?)", eventIds).Find(&airdrops).Error
	if err != nil {
		return
	}
	res = make(map[int32]*EventAirdrop)
	for _, airdrop := range airdrops {
		res[airdrop.EventID] = airdrop
	}
	return
}
