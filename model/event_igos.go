// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameEventIgo = "event_igos"

// EventIgo mapped from table <event_igos>
type EventIgo struct {
	ID         int32   `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"` // 主键ID
	EventID    int32   `gorm:"column:event_id;not null" json:"event_id"`          // 活动id
	TotalAward float64 `gorm:"column:total_award;not null" json:"total_award"`    // 奖池数量
	Price      float64 `gorm:"column:price;not null" json:"price"`                // 价钱
}

// TableName EventIgo's table name
func (*EventIgo) TableName() string {
	return TableNameEventIgo
}

func NewEventIgo() *EventIgo {
	return &EventIgo{}
}

//FindInfoByEventId 根据活动id查找相关数据信息
func (m *EventIgo) FindInfoByEventId(eventId int32) (igo *EventIgo, err error) {
	err = db.Model(m).Where("event_id = ?", eventId).Find(&igo).Error
	return
}

//FindInfoByEventIds 根据活动id查找
func (m *EventIgo) FindInfoByEventIds(eventIds []int32) (res map[int32]*EventIgo, err error) {
	igos := make([]*EventIgo, 0, len(eventIds))
	err = db.Model(m).Where("event_id in (?)", eventIds).Find(&igos).Error
	if err != nil {
		return
	}
	res = make(map[int32]*EventIgo)
	for _, igo := range igos {
		res[igo.EventID] = igo
	}
	return
}
